package com.ormi.config;

import static org.springframework.security.config.Customizer.withDefaults;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.http.HttpMethod;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.web.SecurityFilterChain;

@Configuration
public class SecurityConfig {
    @Bean
    public SecurityFilterChain filterChain(HttpSecurity http) throws Exception {
        http
            .cors(withDefaults())
            .csrf(csrf -> csrf.disable())
            .authorizeHttpRequests(auth -> {
                // OPTIONS 요청은 인증 없이 허용
                auth.requestMatchers(HttpMethod.OPTIONS, "/api/**").permitAll();
                // /api/** 경로는 모두 허용
                auth.requestMatchers("/api/**").permitAll();
                // 기타 요청은 인증 필요
                auth.anyRequest().authenticated();
            })
            // Basic Authentication 비활성화
            .httpBasic(httpBasic -> httpBasic.disable());
        return http.build();
    }
}
